generator client {
        provider = "prisma-client-js"
}

datasource db {
        provider = "postgresql"
        url      = env("DATABASE_URL")
}

model Account {
        id                Int     @id @unique @default(autoincrement())
        userId            Int     @map("user_id")
        type              String
        provider          String
        providerAccountId String  @map("provider_account_id")
        refresh_token     String? @db.Text
        access_token      String? @db.Text
        expires_at        Int?
        token_type        String?
        scope             String?
        id_token          String? @db.Text
        session_state     String?
        user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

        @@unique([provider, providerAccountId])
        @@map("accounts")
}

model Session {
        id           Int      @id @unique @default(autoincrement())
        sessionToken String   @unique @map("session_token")
        userId       Int      @map("user_id")
        expires      DateTime
        user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

        @@map("sessions")
}

model VerificationToken {
        identifier String
        token      String   @unique
        expires    DateTime

        @@unique([identifier, token])
        @@map("verificationtokens")
}

model User {
        id                   Int       @id @unique @default(autoincrement())
        name                 String?
        email                String?   @unique
        emailVerified        DateTime? @map("email_verified")
        image                String?
        username             String    @unique @db.VarChar(50)
        phoneNumber          String    @unique @map("phone_number") @db.VarChar(20)
        phoneNumberConfirmed Boolean   @map("phone_number_confirmed")
        twoFactorEnabled     Boolean   @default(false) @map("two_factor_enabled")
        accessFailedCount    Int       @default(0) @map("access_failed_count")
        registrationDate     DateTime  @default(now())
        lastLoginFromIp      String    @map("last_login_from_ip") @db.VarChar(20)
        lastLoginDate        DateTime  @default(now()) @map("last_login_date")
        Account              Account[]
        Session              Session[]

        @@map("users")
}
